{"version":3,"sources":["comps/Title.js","firebase/config.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","App.js","index.js"],"names":["Title","className","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","projectStorage","projectFirestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","div","initial","width","animate","UploadForm","types","type","onChange","e","selected","target","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","console","log","map","key","onClick","layout","whileHover","opacity","img","src","alt","transition","delay","Modal","selectedImg","classList","contains","y","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAYeA,EAVD,WACZ,OACE,yBAAKC,UAAU,SACb,wCACA,6CACA,yF,2CCQJC,gBAVmB,CACjBC,OAAQ,0CACRC,WAAY,8BACZC,YAAa,qCACbC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,eACnBC,MAAO,8CAKT,IAAMC,EAAiBR,YACjBS,EAAmBT,cACnBU,EAAYV,YAAmBW,WAAWC,gBCgBnCC,EAhCI,SAACC,GAAU,IAAD,EACOC,mBAAS,GADhB,mBAClBC,EADkB,KACRC,EADQ,OAECF,mBAAS,MAFV,mBAElBG,EAFkB,KAEXC,EAFW,OAGHJ,mBAAS,MAHN,mBAGlBK,EAHkB,KAGbC,EAHa,KA4BzB,OAvBAC,qBAAU,WAIN,IAAMC,EAAaf,EAAegB,IAAIV,EAAKW,MACrCC,EAAgBjB,EAAiBkB,WAAW,UAElDJ,EAAWK,IAAId,GAAMe,GAAG,iBAAiB,SAACC,GACtC,IAAIC,EAAcD,EAAKE,iBAAmBF,EAAKG,WAAc,IAE7DhB,EAAYc,MACb,SAACG,GACAf,EAASe,KALb,sBAMG,8BAAAC,EAAA,sEACmBZ,EAAWa,iBAD9B,OACOhB,EADP,OAEOiB,EAAY3B,IAElBgB,EAAcY,IAAI,CAAClB,MAAKiB,cAExBhB,EAAOD,GANR,8CAQJ,CAACN,IAEG,CAACE,WAAUI,MAAKF,U,OCRZqB,EAlBK,SAAC,GAAqB,IAApBzB,EAAmB,EAAnBA,KAAM0B,EAAa,EAAbA,QAAa,EAEb3B,EAAWC,GAA5BM,EAF8B,EAE9BA,IAAKJ,EAFyB,EAEzBA,SASZ,OANAM,qBAAU,WACHF,GACCoB,EAAQ,QAEb,CAACpB,EAAKoB,IAGL,kBAAC,IAAOC,IAAR,CAAY1C,UAAU,eACtB2C,QAAS,CAAEC,MAAO,GAClBC,QAAS,CAAED,MAAO3B,EAAW,QCkBtB6B,EAlCI,WAAO,IAAD,EAEG9B,mBAAS,MAFZ,mBAEdD,EAFc,KAER0B,EAFQ,KAGfM,EAAQ,CAAC,YAAa,cAHP,EAKK/B,mBAAS,MALd,mBAKdG,EALc,KAKPC,EALO,KAmBrB,OACI,8BACI,+BACI,2BAAO4B,KAAK,OAAOC,SAfT,SAACC,GACnB,IAAIC,EAAWD,EAAEE,OAAOC,MAAM,GAE3BF,GAAYJ,EAAMO,SAASH,EAASH,OACnCP,EAAQU,GACR/B,EAAS,MAETqB,EAAQ,MACRrB,EAAS,iDAQL,oCAEJ,yBAAKpB,UAAU,UACTmB,GAAS,yBAAKnB,UAAU,SAAf,IAAyBmB,EAAzB,KACTJ,GAAQ,iCAAOA,EAAKW,KAAZ,KACRX,GAAQ,kBAAC,EAAD,CAAaA,KAAMA,EAAM0B,QAASA,O,OCL7Cc,EAvBM,SAAC3B,GAAgB,IAAD,EACTZ,mBAAS,IADA,mBAC1BwC,EAD0B,KACpBC,EADoB,KAoBjC,OAjBAlC,qBAAU,WACN,IAAMmC,EAAQhD,EAAiBkB,WAAWA,GACzC+B,QAAQ,YAAa,QACrBC,YAAW,SAAC7B,GACT,IAAI8B,EAAY,GAChB9B,EAAK+B,SAAQ,SAAAC,GACTF,EAAUG,KAAV,2BAAmBD,EAAIE,QAAvB,IAA+BC,GAAIH,EAAIG,SAG3CT,EAAQI,MAGZ,OAAO,kBAAMH,OAGd,CAAC9B,IAEG,CAAC4B,SCCGW,EApBG,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,eACTZ,EAAQD,EAAa,UAArBC,KAGP,OAFAa,QAAQC,IAAId,GAGR,yBAAKxD,UAAU,YACTwD,GAAQA,EAAKe,KAAI,SAAAR,GAAG,OAClB,kBAAC,IAAOrB,IAAR,CAAY1C,UAAU,WAAWwE,IAAKT,EAAIG,GAAIO,QAAS,kBAAML,EAAeL,EAAI1C,MAChFqD,QAAM,EACNC,WAAY,CAAEC,QAAS,IACnB,kBAAC,IAAOC,IAAR,CAAYC,IAAKf,EAAI1C,IAAK0D,IAAI,UAC9BpC,QAAS,CAAEiC,QAAS,GACpB/B,QAAS,CAAE+B,QAAS,GACpBI,WAAY,CAAEC,MAAO,YCK1BC,EAnBD,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,YAAaf,EAAoB,EAApBA,eAQzB,OACI,kBAAC,IAAO1B,IAAR,CAAY1C,UAAU,WAAWyE,QAPjB,SAACvB,GACdA,EAAEE,OAAOgC,UAAUC,SAAS,aAC3BjB,EAAe,OAMnBzB,QAAS,CAAEiC,QAAS,GACpB/B,QAAS,CAAE+B,QAAS,IAChB,kBAAC,IAAOC,IAAR,CAAYC,IAAKK,EAAaJ,IAAI,QAClCpC,QAAS,CAAE2C,EAAG,UACdzC,QAAS,CAAEyC,EAAG,SCIXC,MAdf,WAAgB,IAAD,EAEuBvE,mBAAS,MAFhC,mBAERmE,EAFQ,KAEKf,EAFL,KAIb,OACE,yBAAKpE,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWoE,eAAgBA,IACzBe,GAAe,kBAAC,EAAD,CAAOA,YAAaA,EAAaf,eAAgBA,MCXxEoB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.6106662f.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>FireGram</h1>\n      <h2>Your Pictures</h2>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n    </div>\n  )\n}\n\nexport default Title;","import * as firebase from 'firebase/app';\r\nimport 'firebase/storage';\r\nimport 'firebase/firestore';\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCJkiqrW8T2F2j3-pwnNBGNWYdL79Zk5Cg\",\r\n    authDomain: \"ltmfiregram.firebaseapp.com\",\r\n    databaseURL: \"https://ltmfiregram.firebaseio.com\",\r\n    projectId: \"ltmfiregram\",\r\n    storageBucket: \"ltmfiregram.appspot.com\",\r\n    messagingSenderId: \"715356716115\",\r\n    appId: \"1:715356716115:web:7f05a878f78dfb180edaa6\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const projectStorage = firebase.storage();\r\n  const projectFirestore = firebase.firestore();\r\n  const timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\n  export {projectStorage, projectFirestore, timestamp};","import { useState, useEffect } from 'react';\r\nimport { projectStorage, projectFirestore, timestamp } from '../firebase/config';\r\n\r\nconst useStorage = (file) => {\r\n    const [progress, setProgress] = useState(0);\r\n    const [error, setError] = useState(null);\r\n    const [url, setUrl] = useState(null);\r\n\r\n    useEffect(() => {\r\n        //this function will be called everytime file change\r\n\r\n        //reference\r\n        const storageRef = projectStorage.ref(file.name);\r\n        const collectionRef = projectFirestore.collection('images');\r\n\r\n        storageRef.put(file).on('state_changed', (snap) => {\r\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n\r\n            setProgress(percentage);\r\n        }, (err) => {\r\n            setError(err);\r\n        }, async () => {\r\n            const url = await storageRef.getDownloadURL();\r\n            const createdAt = timestamp();\r\n\r\n            collectionRef.add({url, createdAt });\r\n\r\n            setUrl(url);\r\n        })\r\n    }, [file]);\r\n\r\n    return {progress, url, error }\r\n\r\n}\r\n\r\nexport default useStorage;","import React, { useEffect } from 'react';\r\nimport useStorage from '../hooks/useStorage';\r\nimport {motion} from 'framer-motion';\r\n\r\n\r\nconst ProgressBar = ({file, setFile}) => {\r\n    \r\n    const {url, progress} = useStorage(file);\r\n    // console.log(progress, url);\r\n\r\n    useEffect(() => {\r\n        if(url){\r\n            setFile(null);\r\n        }\r\n    }, [url, setFile]);\r\n\r\n    return (\r\n        <motion.div className=\"progress-bar\"\r\n        initial={{ width: 0 }}\r\n        animate={{ width: progress + '%' }} />\r\n    )\r\n}\r\n\r\nexport default ProgressBar;","import React, { useState } from 'react';\r\nimport ProgressBar from './ProgressBar';\r\n\r\nconst UploadForm = () => {\r\n\r\n    const [file, setFile] = useState(null);\r\n    const types = ['image/png', 'image/jpeg'];\r\n\r\n    const [error, setError] = useState(null);\r\n\r\n    const changeHandler = (e) => {\r\n        let selected = e.target.files[0];\r\n\r\n        if(selected && types.includes(selected.type)) {\r\n            setFile(selected);\r\n            setError('');\r\n        } else {\r\n            setFile(null);\r\n            setError('PLease select an image file (png or jpeg)');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <label>\r\n                <input type=\"file\" onChange={changeHandler} />\r\n                <span>+</span>\r\n            </label>\r\n            <div className=\"output\">\r\n                { error && <div className=\"error\"> {error} </div> }\r\n                { file && <div> {file.name} </div> }\r\n                { file && <ProgressBar file={file} setFile={setFile} /> }\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default UploadForm;","import { useState, useEffect } from 'react';\r\nimport { projectStorage, projectFirestore, timestamp } from '../firebase/config';\r\n\r\nconst useFirestore = (collection) => {\r\n    const [docs, setDocs] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const unsub = projectFirestore.collection(collection)\r\n        .orderBy('createdAt', \"desc\")\r\n        .onSnapshot((snap) => {\r\n            let documents = [];\r\n            snap.forEach(doc => {\r\n                documents.push({...doc.data(), id: doc.id})\r\n            });\r\n\r\n            setDocs(documents);\r\n        });\r\n\r\n        return () => unsub();\r\n        //unsub from collection when no longer use\r\n\r\n    }, [collection]);\r\n\r\n    return {docs};\r\n}\r\n\r\nexport default useFirestore;","import React from 'react';\r\nimport useFirestore from '../hooks/useFirestore';\r\nimport {motion} from 'framer-motion';\r\n\r\nconst ImageGrid = ({setSelectedImg}) => {\r\n    const {docs} = useFirestore('images');\r\n    console.log(docs);\r\n\r\n    return (\r\n        <div className=\"img-grid\">\r\n            { docs && docs.map(doc => (\r\n                <motion.div className=\"img-wrap\" key={doc.id} onClick={() => setSelectedImg(doc.url)}\r\n                layout\r\n                whileHover={{ opacity: 1}}>\r\n                    <motion.img src={doc.url} alt=\"Picture\"\r\n                    initial={{ opacity: 0 }}\r\n                    animate={{ opacity: 1 }}\r\n                    transition={{ delay: 0.5}} />\r\n                </motion.div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageGrid;","import React from 'react';\r\nimport {motion} from 'framer-motion';\r\n\r\nconst Modal = ({selectedImg, setSelectedImg}) => {\r\n\r\n    const handelClick = (e) => {\r\n        if(e.target.classList.contains('backdrop')){\r\n            setSelectedImg(null);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <motion.div className=\"backdrop\" onClick={handelClick}\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1}}>\r\n            <motion.img src={selectedImg} alt=\"Modal\"\r\n            initial={{ y: \"-100vh\" }}\r\n            animate={{ y: \"0\"}} />\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default Modal;","import React from 'react';\nimport Title from './comps/Title';\nimport UploadForm from './comps/UploadForm';\nimport ImageGrid from './comps/ImageGrid';\nimport Modal from './comps/Modal';\nimport { useState } from 'react';\n\nfunction App() {\n\nconst [selectedImg, setSelectedImg] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <Title/>\n      <UploadForm />\n      <ImageGrid setSelectedImg={setSelectedImg} />\n      { selectedImg && <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg} /> }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}